ext {
    versions = [:]
    libs = [:]
}

versions += [
    curator: "2.9.1",
    gradle: "2.8",
    jUnit: "4.12",
    logback: "1.1.3",
    scala: "2.11.7",
    scalaCheck: "1.12.4",
    scalaMeter: "0.6",
    scalaTest: "2.2.4",
    scoverage: "1.1.1",
    slf4j: "1.7.12",
]

// Override Scala version
if (hasProperty('scalaVersion')) {
    versions["scala"] = scalaVersion
}

// Add base Scala version
versions["scalaBase"] = versions.scala.substring(0, versions.scala.lastIndexOf("."))

libs += [
    curatorTest: "org.apache.curator:curator-test:$versions.curator",
    curatorRecipes: "org.apache.curator:curator-recipes:$versions.curator",
    jUnit: "junit:junit:$versions.jUnit",
    logbackClassic: "ch.qos.logback:logback-classic:$versions.logback",
    scala: "org.scala-lang:scala-library:$versions.scala",
    scalaCompiler: "org.scala-lang:scala-compiler:$versions.scala",
    scalaCheck: "org.scalacheck:scalacheck_$versions.scalaBase:$versions.scalaCheck",
    scalaMeter: "com.storm-enroute:scalameter_$versions.scalaBase:$versions.scalaMeter",
    scalaTest: "org.scalatest:scalatest_$versions.scalaBase:$versions.scalaTest",
    scoveragePlugin: "org.scoverage:scalac-scoverage-plugin_$versions.scalaBase:$versions.scoverage",
    scoverageRuntime: "org.scoverage:scalac-scoverage-runtime_$versions.scalaBase:$versions.scoverage",
    slf4jApi: "org.slf4j:slf4j-api:$versions.slf4j",
]
